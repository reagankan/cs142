Running the Web App
	1. mongod --config /usr/local/etc/mongod.conf --fork
	2. node loadDatabase.js
	3. npm run nodemon & npm run build:w
	npm run nodemon :- actively monitors server code BACKEND
	npm run build:w :- webpack actively monitors React components FRONTEND


Running the Test Suite
	1. launch mongoDB
		mongod --config /usr/local/etc/mongod.conf --fork
	2. load in data
		node loadDatabase.js
	3. launch webServer
		node webServer.js or npm run nodemon
	4. run tests
		cd test
		npm test

Killing Node Apps
    1. Find PID
        lsof -i tcp:3000 
    2. Kill Process
        kill -9 PID

MongoDB Usage
	mongod --config /usr/local/etc/mongod.conf --fork
	ps aux | grep -v grep | grep mongod
	node loadDatabase.js

NodeMon Usage
	Note: in project 6, I edited package.json to include a new script that runs the local install of nodemon
	cmd: npm run nodemon


Axios
Slide 11: https://web.stanford.edu/class/cs142/lectures/ServerCom.pdf


StateManagement: session info, user login status, etc.
	Frontend: ReactJS Context
		docs: https://reactjs.org/docs/context.html
	Backend: Express Session Middleware
		docs: http://expressjs.com/en/resources/middleware/cookie-session.html


A note on the ...props syntax: this is COMPOSITION!!
composition: passing props from parent component to child.
I knew this concept, just did not know the name for it!!
e.g. since project 5, we've seen in photoShare.jsx:
	<Route path="/users/:userId"
	    //use a render prop that sets the subcomponen(UserDetail) props
	    //to the component(Route) props.
	    //Thus passing the property: props.match to UserDetail.
	    render={ props => <UserDetail {...props} /> }
	  />
sources
	https://www.robinwieruch.de/react-pass-props-to-component#react-props-syntax
	https://reactjs.org/docs/composition-vs-inheritance.html


Switch Component with {} Child Components
Warning: Warning: React does not recognize the `computedMatch` prop on a DOM element. If you intentionally want it to appear in the DOM as a custom attribute, spell it as lowercase `computedmatch` instead. If you accidentally passed it from a parent component, remove it from the DOM element.
Solution: add <React.Fragment>  in <Switch>.
https://github.com/ant-design/ant-motion/issues/185

